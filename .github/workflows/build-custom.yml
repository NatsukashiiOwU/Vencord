name: Build Custom Vencord with Plugins

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *' # Run daily to check for upstream updates
  workflow_dispatch: # Allow manual triggering

jobs:
  sync-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v3 # Install pnpm using packageManager key in package.json

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Sync with upstream Vencord
        run: |
          git remote add upstream https://github.com/Vendicated/Vencord.git
          git fetch upstream
          git merge upstream/main --allow-unrelated-histories -X theirs
          git push origin main

      - name: Install dependencies
        run: pnpm i

      - name: Add custom plugins
        run: |
          rm -rf src/userplugins/* || true
          mkdir -p src/userplugins
          cd src/userplugins
          git init
          git remote add origin https://github.com/NatsukashiiOwU/vencord_goofy_plugins.git
          git config core.sparseCheckout true
          echo "bulkRoles/" >> .git/info/sparse-checkout
          echo "extractChannelMessages/" >> .git/info/sparse-checkout
          git pull origin main --depth=1 || { echo "Failed to pull plugins"; exit 1; }
          cd ../..
        continue-on-error: false

      # - name: Build web
      #   run: pnpm buildWebStandalone

      - name: Build
        run: pnpm build --standalone

      - name: Generate plugin list
        run: pnpm generatePluginJson dist/plugins.json dist/plugin-readmes.json

      - name: Clean up obsolete files
        run: |
            rm -rf dist/*-unpacked dist/vendor Vencord.user.css vencordDesktopRenderer.css vencordDesktopRenderer.css.map

      - name: Get some values needed for the release
        id: release_values
        run: |
            echo "release_tag=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Upload DevBuild as release
        if: github.repository == 'NatsukashiiOwU/Vencord' && github.event_name != 'pull_request'
        run: |
          gh release view natsukashii-vencord-dev --repo NatsukashiiOwU/Vencord || gh release create natsukashii-vencord-dev --repo NatsukashiiOwU/Vencord --title "Natsukashii Vencord Dev $RELEASE_TAG" --notes "Automated dev build"
          gh release upload natsukashii-vencord-dev --repo NatsukashiiOwU/Vencord --clobber dist/*
          gh release edit natsukashii-vencord-dev --repo NatsukashiiOwU/Vencord --title "Natsukashii Vencord Dev $RELEASE_TAG"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_TAG: ${{ env.release_tag }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: vencord-build
          path: dist/
